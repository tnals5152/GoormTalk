basePath: /api/v1
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Room:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      owner:
        $ref: '#/definitions/models.User'
      roomName:
        description: room_name
        type: string
      roomType:
        type: integer
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  models.RoomUser:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      notice:
        type: boolean
      room:
        $ref: '#/definitions/models.Room'
      roomID:
        type: integer
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
        description: '`gorm:"foreignKey:UserID"`'
      userID:
        type: integer
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      profileImage:
        type: string
      room:
        items:
          $ref: '#/definitions/models.Room'
        type: array
      roomUser:
        items:
          $ref: '#/definitions/models.RoomUser'
        type: array
      updatedAt:
        type: string
      username:
        description: default string length = varchar(255)
        type: string
    type: object
host: 3.39.24.154:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: If it already exists, the changeable information is updated, and
        in the case of a new host, it is created and returned.
      parameters:
      - description: User ID
        in: body
        name: id
        required: true
        schema:
          type: string
      - description: User password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.User'
      summary: Host information collection.
swagger: "2.0"
